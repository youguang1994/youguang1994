https://blog.csdn.net/leilei1366615/article/details/106267225




启动docker          systemctl start docker    systemctl restart docker    systemctl enable docker    systemctl status docker

查看docker 版本号信息           docker version      docker info



docker 镜像命令

查看自己服务器中docker 镜像列表   docker images  

搜索镜像     

docker search 镜像名

docker search --filter=STARS=9000 mysql 搜索 STARS >9000的 mysql 镜像

拉取镜像 

docker pull 镜像名

docker pull 镜像名:tag

运行镜像 

docker run 镜像名

docker run 镜像名:Tag

删除镜像

#删除一个
docker rmi -f 镜像名/镜像ID

#删除多个 其镜像ID或镜像用用空格隔开即可 
docker rmi -f 镜像名/镜像ID 镜像名/镜像ID 镜像名/镜像ID

#删除全部镜像  -a 意思为显示全部, -q 意思为只显示ID
docker rmi -f $(docker images -aq)

强制删除镜像

docker image rm 镜像名称/镜像ID

保存镜像

docker save 镜像名/镜像ID -o 镜像保存在哪个位置与名字

加载镜像

docker load -i 镜像保存文件位置

docker 容器命令

查看正在运行容器列表

docker ps


查看所有容器

docker ps -a


运行一个容器

docker run -it -d --name 要取的别名 镜像名:Tag /bin/bash

停止容器

docker stop 容器名/容器ID

容器端口与服务器端口映射

        -p 宿主机端口:容器端口


        docker run -itd --name redis002 -p 8888:6379 redis:5.0.5 /bin/bash


进入容器方式

docker exec -it 容器名/容器ID /bin/bash

docker attach 容器名/容器ID

从容器内 退出到自己服务器中

exit


Ctrl + p + q

停止容器

docker stop 容器ID/容器名


重启容器

docker restart 容器ID/容器名


启动容器

docker start 容器ID/容器名

kill 容器

docker kill 容器ID/容器名

容器文件拷贝 

#从容器内 拷出    docker cp 容器ID/名称: 容器内路径 容器外路径

#从外部 拷贝文件到容器内     docker cp 容器外路径 容器ID/名称: 容器内路径

查看容器日志

docker logs -f --tail=要查看末尾多少行 默认all 容器ID

启动容器时，使用docker run命令时 添加参数--restart=always 便表示，该容器随docker服务启动而自动启动

docker run -itd --name redis002 -p 8888:6379 --restart=always  redis:5.0.5 /bin/bash


数据挂载

简单来讲，就是将容器内的数据与外部宿主机文件绑定起来，类似一个双持久化，当容器删除时，宿主机文件数据目录仍在，下次启动容器只要将数据目录指向宿主机数据所在位置即可恢复！

-v 宿主机文件存储位置:容器内文件位置

# 运行一个docker redis 容器 进行 端口映射 两个数据卷挂载 设置开机自启动
docker run -d -p 6379:6379 --name redis505 --restart=always  -v /var/lib/redis/data/:/data -v /var/lib/redis/conf/:/usr/local/etc/redis/redis.conf  redis:5.0.5 --requirepass "password"


修改其启动配置

docker  update --restart=always 容器Id 或者 容器名

或

docker container update --restart=always 容器Id 或者 容器名




更换容器名

docker rename 容器ID/容器名 新容器名








自己提交一个镜像

docker commit -m="提交信息" -a="作者信息" 容器名/容器ID 提交后的镜像名:Tag

docker 运维命令

查看docker工作目录

sudo docker info | grep "Docker Root Dir"


查看docker磁盘占用总体情况

du -hs /var/lib/docker/ 


查看Docker的磁盘使用具体情况

docker system df


删除 无用的容器和 镜像

#  删除异常停止的容器
docker rm `docker ps -a | grep Exited | awk '{print $1}'` 
 
#  删除名称或标签为none的镜像
docker rmi -f  `docker images | grep '<none>' | awk '{print $3}'`


清除所有无容器使用的镜像

docker system prune -a

查找大文件

find / -type f -size +100M -print0 | xargs -0 du -h | sort -nr





























































































